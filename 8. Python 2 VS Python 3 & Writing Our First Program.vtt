WEBVTT

00:00.720 --> 00:06.900
Before we start writing our first program I want to spend a minute or two talking to you about Python

00:06.900 --> 00:09.540
2 and Python 3.

00:09.600 --> 00:15.390
Now these are the two main versions of python and obviously Python 3 is the latest version.

00:15.690 --> 00:19.790
So you might be thinking which version are we going to be using throughout the course.

00:20.070 --> 00:22.700
Well the quick answer to that is both.

00:22.800 --> 00:29.530
And by the end of the course we're going to be able to write programs in both Python 2 and Python 3.

00:29.550 --> 00:34.940
The reason for this is and you probably hear this from a lot of programmers is if you don't program

00:34.960 --> 00:40.360
properly then you're going to be able to write programs in any programming language.

00:40.560 --> 00:45.990
All you have to do is spend some time reading the syntax and getting familiar with the way that you

00:45.990 --> 00:51.630
write code for the language what you're going to already know the concepts and the way of how to think

00:51.630 --> 00:54.160
about problem how to model it and solve it.

00:54.210 --> 00:56.280
So write it in a different language.

00:56.280 --> 00:58.560
It's not going to be a problem.

00:58.640 --> 01:04.790
Therefore if you learn programming in Python 2 or in Python 3 then the version number is not going to

01:04.790 --> 01:08.940
make a big difference to you because you're still using the same language.

01:09.020 --> 01:13.670
You're either using a slightly new or a slightly older version.

01:13.670 --> 01:19.760
Now you might be thinking why are we even talking about Python 2 if 3 is the latest version.

01:19.760 --> 01:21.130
Well the answer is simple.

01:21.140 --> 01:26.140
There is a huge number of programs that's already been written in Python too.

01:26.270 --> 01:32.450
So if you ever wanted to use one of these programs in your program or if you ever wanted to read them

01:32.450 --> 01:37.030
and modify them you're going to have to understand how Python works.

01:37.040 --> 01:45.110
Also there is still a lot of libraries that only work on Python 2 and some of them have a Python 3 version

01:45.300 --> 01:48.470
but the Python 3 is more buggy than Python 2.

01:48.560 --> 01:51.850
So you might end up using Python to.

01:52.110 --> 02:00.060
Another reason is a lot of Linux and Unix systems still come with Python to as the default Python interpreter.

02:00.450 --> 02:07.110
So if you ever want to exploit these systems you're going to have to write programs in Python to.

02:07.350 --> 02:11.010
Now don't get confused and don't worry about the two versions.

02:11.010 --> 02:17.670
Like I said at the end of the day you're writing programs in the same programming language and the differences

02:17.670 --> 02:22.600
are actually very small especially when it comes to things that were going to be doing in this course.

02:22.740 --> 02:28.500
So they might be slight changes in the names of the libraries and the library calls or slight changes

02:28.560 --> 02:30.490
in some of the statements.

02:30.510 --> 02:34.560
So I'm actually going to be covering these changes as we go through of course.

02:34.830 --> 02:39.750
And therefore by the end of the course we are going to be able to write programs and understand programs

02:39.750 --> 02:43.590
written in both Python 2 and Python 3.

02:43.590 --> 02:47.910
Now let's go ahead and start writing our first program now.

02:47.940 --> 02:55.080
In most cases all you need is a text editor in order to write a program.

02:55.110 --> 02:57.240
So now I'm in Cali Linux.

02:57.330 --> 03:03.570
I'm going to go to leef pod which is a text editor that comes pre-installed with colonics and we can

03:03.570 --> 03:08.050
start writing our Python programs straight away in here.

03:08.070 --> 03:14.760
Now there are text editors or ideas that's designed for programming and we'll get into that in the next

03:14.760 --> 03:15.430
lecture.

03:15.630 --> 03:20.760
But for now I'm keeping everything as simple as possible and I'm actually going to write a very very

03:20.760 --> 03:25.790
simple program that will only display a message on screen.

03:25.950 --> 03:32.450
Now in the future we will not be writing useless programs like this one but this is just an introduction.

03:32.580 --> 03:37.290
So I just want you to get an idea of what a program is and how to run it.

03:38.430 --> 03:46.320
So in order to print something on screen in python we can use the print function so I can just do print.

03:46.710 --> 03:48.260
That's the name of the function.

03:48.540 --> 03:55.630
And then we can use two brackets and give it the message that we want to print between these two brackets.

03:55.710 --> 04:02.730
Now since the message is going to be text we have to enclose this text between two quotation marks and

04:02.820 --> 04:07.180
the message is just going to be hello world.

04:07.650 --> 04:08.930
So very very simple.

04:09.000 --> 04:13.570
We're calling a function a Python function that prints data on screen.

04:13.680 --> 04:19.700
The function is called print and then we're giving it the text that we want to print in here.

04:19.710 --> 04:25.980
Now this is done and you can actually run the file like this but it's actually better to include the

04:25.980 --> 04:34.490
python shebang at the start of each python file you create the shebang is a directive that tells the

04:34.580 --> 04:39.400
operating system how to handle this specific file.

04:39.440 --> 04:47.270
So because this is a python file the Shabangu is going to be harsh followed by an escalation Mark followed

04:47.270 --> 04:50.770
by you as our bin.

04:50.990 --> 04:56.340
And and if you're writing a python to program you should type python.

04:56.420 --> 05:00.740
If you're writing a Python 3 program you should type python 3.

05:01.400 --> 05:06.570
So like I said this line is not mandatory but it's a common practice.

05:06.710 --> 05:10.150
And it also allows to run this file as an executable.

05:10.310 --> 05:15.620
So the system will automatically know that this is a python file.

05:15.650 --> 05:23.570
Now what's done with this we can't save this so I'm going to go to File Save and I'm going to put this

05:23.570 --> 05:28.900
in my root directory and I'm going to call this hello.

05:29.360 --> 05:40.140
Why I'm going to click on Save and now if I go to my files you can see I have the file in here in my

05:40.140 --> 05:47.640
home which is my root directory so I'm going to close this and I'm going to open my terminal to run

05:47.640 --> 05:53.990
this file and the terminal opens on the root directory by default.

05:54.180 --> 06:01.410
So if I do P.W. The You'll see already interviewed and if I do ls to list all the current files and

06:01.410 --> 06:08.310
directories you can see I have loaded it in here now to run this file.

06:08.310 --> 06:17.550
We have to first say Python and then specify the python file name that we want to run.

06:17.570 --> 06:24.830
The reason for this is because as you can see in here the code is just simple text and the computer

06:25.040 --> 06:27.880
does not understand this simple text.

06:28.340 --> 06:35.090
So what we're doing in here is we're actually calling an interpreter a python interpreter and we're

06:35.090 --> 06:39.080
passing this file to the interpreter.

06:39.080 --> 06:46.480
You can think of the interpreter as a translator that can translate text from one language to another.

06:47.060 --> 06:54.650
So in this case it's going to translate the program that we wrote in Python to machine language so that

06:54.650 --> 07:00.810
the computer can understand this is actually why we also put this line here.

07:00.840 --> 07:07.050
This line tells the system the location of the interpreter so that if someone tries to run this file

07:07.260 --> 07:13.890
without specifying Python in front of it the system will know that this is a python interpreter and

07:13.980 --> 07:20.390
pass this file to the interpreter so that it can convert it from Python code to machine code.

07:21.560 --> 07:25.430
So you can think of the interpreter as a person that knows two languages.

07:25.430 --> 07:31.880
For example it knows English and Spanish so you can talk to it in English and it will translate what

07:31.880 --> 07:34.060
you say to Spanish.

07:34.670 --> 07:41.700
So now if I hit enter you can see that my code is getting executed in here and I can see the message

07:41.700 --> 07:47.260
that I specified in here be displayed on screen so that's perfect.

07:47.520 --> 07:53.560
And if you actually want to run this in Python 3 you can just type python 3.

07:53.730 --> 07:54.440
Hello.

07:54.540 --> 07:55.190
Why.

07:55.380 --> 07:59.310
And again you can see that the code getting executed exactly the same.

07:59.370 --> 08:04.740
And this goes back to me when I was talking about Python 2 and 3 and I said there isn't a huge difference

08:04.740 --> 08:06.250
between them.

08:06.570 --> 08:07.940
So that's it for this lecture.

08:07.950 --> 08:11.730
I just wanted to spend some time talking about Python 2 and 3.

08:11.910 --> 08:17.730
And I also wanted to give you a basic understanding of what a program is and how to run it.

08:17.730 --> 08:24.270
Some people think of a program as this complicated thing but all it is is simply a text file with some

08:24.270 --> 08:25.130
text in it.

08:25.230 --> 08:30.370
And when you run it you have to run it with the interpreter of the language.

08:30.370 --> 08:37.360
Now I should also mention some languages such as C they would require you to compile the code before

08:37.360 --> 08:38.450
running it.

08:38.830 --> 08:45.790
So compiling the code will actually convert the text that you have in here into another file that the

08:45.790 --> 08:47.530
computer can understand.

08:47.710 --> 08:54.280
And then instead of running this file the source file you will run the file that the compiler produces

08:55.120 --> 08:58.980
and will actually see how we can convert Python code.

08:58.990 --> 09:03.680
Python source code into binary used that can run on any operating system.

09:03.880 --> 09:07.200
But more on that later you don't need to worry about that right now.
